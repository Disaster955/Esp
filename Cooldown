local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local module = {}
local charDropdown, abilityDropdown, resetButton
local savedCooldowns = {}
local currentCharacter = nil

-- Vincular Dropdowns y Botón desde Rayfield
function module.BindUI(charDD, abilityDD, resetBtn)
    charDropdown = charDD
    abilityDropdown = abilityDD
    resetButton = resetBtn
end

-- Seleccionar Personaje
function module.SelectCharacter(characterName)
    currentCharacter = characterName
    local charFolder = workspace:FindFirstChild(LocalPlayer.Name) and workspace[LocalPlayer.Name]:FindFirstChild("CharacterFolder")
    if not charFolder then return end

    local charNameObj = charFolder:FindFirstChild("CharacterName")
    if charNameObj and charNameObj:IsA("StringValue") and charNameObj.Value == characterName then
        -- Activar segundo Dropdown (habilidades)
        module.UpdateAbilities()
    else
        -- Si no coincide, vaciar habilidades
        abilityDropdown:Set({Options = {}, CurrentOption = ""})
    end
end

-- Actualizar lista de habilidades en el segundo Dropdown
function module.UpdateAbilities()
    local abilityFrame = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("AbilitysGui"):WaitForChild("AbilityFrame")
    local options = {}

    for _, ability in ipairs(abilityFrame:GetChildren()) do
        local config = ability:FindFirstChild("Configuration")
        if config then
            local cd = config:FindFirstChild("CoolDown")
            if cd and cd:IsA("NumberValue") then
                table.insert(options, ability.Name)

                -- Guardar cooldown original si no está guardado y no es 0
                if not savedCooldowns[ability.Name] and cd.Value ~= 0 then
                    savedCooldowns[ability.Name] = cd.Value
                end
            end
        end
    end

    abilityDropdown:Set({Options = options, CurrentOption = ""})
end

-- Seleccionar habilidad y poner CoolDown en 0
function module.SelectAbility(abilityName)
    local abilityFrame = LocalPlayer.PlayerGui.AbilitysGui.AbilityFrame
    local ability = abilityFrame:FindFirstChild(abilityName)
    if ability then
        local config = ability:FindFirstChild("Configuration")
        local cd = config and config:FindFirstChild("CoolDown")
        if cd then
            cd.Value = 0
        end
    end
end

-- Resetear todos los cooldowns a su valor original
function module.ResetCooldowns()
    local abilityFrame = LocalPlayer.PlayerGui.AbilitysGui.AbilityFrame
    for abilityName, originalValue in pairs(savedCooldowns) do
        local ability = abilityFrame:FindFirstChild(abilityName)
        if ability then
            local config = ability:FindFirstChild("Configuration")
            local cd = config and config:FindFirstChild("CoolDown")
            if cd then
                cd.Value = originalValue
            end
        end
    end
end

return module
